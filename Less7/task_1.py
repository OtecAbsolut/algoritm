# -*- coding: utf-8 -*-

# 1. Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив,
# заданный случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
# Сортировка должна быть реализована в виде функции. По возможности доработайте алгоритм (сделайте его умнее).

import random
import timeit


# Мы при любом раскладе при первой проходе получаем макисмальный элемент в правой части. Соответвенно при следующей проходке,
# нет смысла делать сравление с поледним элементом. Идея тюнинга сортировке состоит в том, что при каждой следующей проходке мы
# уменьшаем количество сравниваемые эелеметнов исключая крайний правый.
def bubble(arr):
    array = arr
    n = 1
    while n < len(array):
        for i in range(len(array) - n):   # вот тут вместо 1 поставили 'n'
            if array[i] > array[i + 1]:
                array[i], array[i + 1] = array[i + 1], array[i]
        n += 1
    return array



if __name__ == '__main__':
    SIZE = 10
    MIN = -100
    MAX = 100

    array = [random.randint(MIN, MAX) for _ in range(SIZE)]
    print(f'Было:  {array}')
    print(f'Стало: {bubble(array)}')